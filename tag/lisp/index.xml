<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lisp | Faximilie</title><link>/tag/lisp/</link><atom:link href="/tag/lisp/index.xml" rel="self" type="application/rss+xml"/><description>lisp</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 30 Oct 2020 15:45:00 +1100</lastBuildDate><image><url>img/map[gravatar:%!s(bool=false) shape:circle]</url><title>lisp</title><link>/tag/lisp/</link></image><item><title>Outlook Org-mode integration on MacOS</title><link>/post/outlook-org-macos/</link><pubDate>Fri, 30 Oct 2020 15:45:00 +1100</pubDate><guid>/post/outlook-org-macos/</guid><description>&lt;div class="HTML">
&lt;div>&lt;/div>
&lt;script charset="UTF-8" src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/languages/applescript.min.js">&lt;/script>
&lt;script charset="UTF-8" src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/languages/lisp.min.js">&lt;/script>
&lt;/div>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>So a lot of my notes and tasks will require me to reference outlook items,
either emails or meetings.&lt;/p>
&lt;p>There aren&amp;rsquo;t any real solutions for Achieving this on MacOS at the moment, and
the Windows solutions are not too great.&lt;/p>
&lt;p>So I decided to create this unholy abomination. I&amp;rsquo;m sorry.&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;p>So there&amp;rsquo;s a few moving parts to this, but overall it&amp;rsquo;s mainly leverging
&lt;strong>AppleScript&lt;/strong>, &lt;strong>Karabiner&lt;/strong> and &lt;strong>Emacs&lt;/strong> to provide this functionality.&lt;/p>
&lt;h3 id="applescript">AppleScript&lt;/h3>
&lt;p>Let&amp;rsquo;s start with the MacOS Native automation tools, this is how we&amp;rsquo;ll get the ID
of the Outlook item, which we will need later when searching for it.&lt;/p>
&lt;p>There are two AppleScript files, one for inserting a link into the current
buffer, and another for using a capture template. Both are almost identical, but
one evals some Elisp to ensure we insert at the right point and file.&lt;/p>
&lt;h4 id="insertion">Insertion&lt;/h4>
&lt;pre>&lt;code class="language-applescript">tell application &amp;quot;Microsoft Outlook&amp;quot;
set theMessages to selected objects
repeat with theMessage in theMessages
set toOpen to id of theMessage
end repeat
end tell
tell application &amp;quot;Emacs&amp;quot; to activate
do shell script &amp;quot;/usr/local/bin/emacsclient --eval '(with-current-buffer (window-buffer) (org-insert-link nil \&amp;quot;outlook:&amp;quot; &amp;amp; toOpen &amp;amp; &amp;quot;\&amp;quot; (read-string \&amp;quot;Link Name:\&amp;quot;)))'&amp;quot;
&lt;/code>&lt;/pre>
&lt;h4 id="capture">Capture&lt;/h4>
&lt;pre>&lt;code class="language-applescript">tell application &amp;quot;Microsoft Outlook&amp;quot;
set theMessages to selected objects
repeat with theMessage in theMessages
set toOpen to id of theMessage
end repeat
end tell
tell application &amp;quot;Emacs&amp;quot; to activate
do shell script &amp;quot;/usr/local/bin/emacsclient \&amp;quot;org-protocol://capture?template=o&amp;amp;url=&amp;quot; &amp;amp; toOpen &amp;amp; &amp;quot;\&amp;quot;&amp;quot;
&lt;/code>&lt;/pre>
&lt;h3 id="karabiner">Karabiner&lt;/h3>
&lt;p>Karabiner provides a very nice way of running a shell script from a keybind, and
even supports filtering to the correct window. Thus this keybind will only
trigger when Outlook is focused.&lt;/p>
&lt;p>&lt;kbd>Command+L&lt;/kbd> will insert and &lt;kbd>Command+Shift+L&lt;/kbd> will capture&lt;/p>
&lt;pre>&lt;code class="language-json">{
&amp;quot;title&amp;quot;: &amp;quot;Outlook-Emacs&amp;quot;,
&amp;quot;rules&amp;quot;: [
{
&amp;quot;description&amp;quot;: &amp;quot;Meta-L to copy outlook item to orgmode&amp;quot;,
&amp;quot;manipulators&amp;quot;: [
{
&amp;quot;type&amp;quot;: &amp;quot;basic&amp;quot;,
&amp;quot;from&amp;quot;: {
&amp;quot;key_code&amp;quot;: &amp;quot;l&amp;quot;,
&amp;quot;modifiers&amp;quot;: {
&amp;quot;mandatory&amp;quot;: [&amp;quot;left_command&amp;quot;],
&amp;quot;optional&amp;quot;: [&amp;quot;caps_lock&amp;quot;]
}
},
&amp;quot;to&amp;quot;: [
{
&amp;quot;shell_command&amp;quot;: &amp;quot;osascript ~/Documents/Store_Selected_OutlookItem_As_Orgmode_Link.scpt&amp;quot;
}
],
&amp;quot;conditions&amp;quot;: [
{
&amp;quot;type&amp;quot;: &amp;quot;frontmost_application_if&amp;quot;,
&amp;quot;bundle_identifiers&amp;quot;: [&amp;quot;^com\\.microsoft\\.Outlook$&amp;quot;]
}
]
}
]
},
{
&amp;quot;description&amp;quot;: &amp;quot;Meta-L to copy outlook item to orgmode&amp;quot;,
&amp;quot;manipulators&amp;quot;: [
{
&amp;quot;type&amp;quot;: &amp;quot;basic&amp;quot;,
&amp;quot;from&amp;quot;: {
&amp;quot;key_code&amp;quot;: &amp;quot;l&amp;quot;,
&amp;quot;modifiers&amp;quot;: {
&amp;quot;mandatory&amp;quot;: [&amp;quot;left_command&amp;quot;, &amp;quot;left_shift&amp;quot;],
&amp;quot;optional&amp;quot;: [&amp;quot;caps_lock&amp;quot;]
}
},
&amp;quot;to&amp;quot;: [
{
&amp;quot;shell_command&amp;quot;: &amp;quot;osascript ~/Documents/Capture_Selected_OutlookItem_As_Orgmode_Link.scpt&amp;quot;
}
],
&amp;quot;conditions&amp;quot;: [
{
&amp;quot;type&amp;quot;: &amp;quot;frontmost_application_if&amp;quot;,
&amp;quot;bundle_identifiers&amp;quot;: [&amp;quot;^com\\.microsoft\\.Outlook$&amp;quot;]
}
]
}
]
}
]
}
&lt;/code>&lt;/pre>
&lt;h3 id="emacs">Emacs&lt;/h3>
&lt;p>There are two parts of this for Emacs, the Capture template, and the custom hyperlink&lt;/p>
&lt;h4 id="custom-link">Custom Link&lt;/h4>
&lt;p>I just dump this into my startup config, but you could make an &lt;code>ol-outlook.el&lt;/code>
if you wanted to make it less platform specific.&lt;/p>
&lt;p>This relies on MDFind which is the macos spotlight CLI, it will find it, then
open it in outlook.&lt;/p>
&lt;pre>&lt;code class="language-emacs-lisp">(require 'ol)
(org-add-link-type &amp;quot;outlook&amp;quot; 'org-outlook-open)
(defun org-outlook-open (id _)
&amp;quot;Open the outlook item matching that ID&amp;quot;
(shell-command (format &amp;quot;mdfind \&amp;quot;com_microsoft_outlook_recordID == '%s'\&amp;quot; -0 | xargs -0 open &amp;quot; id)))
&lt;/code>&lt;/pre>
&lt;h4 id="capture-template">Capture template&lt;/h4>
&lt;p>Ideally this should be customized more for your setup, but this is what I use.&lt;/p>
&lt;pre>&lt;code class="language-emacs-lisp">(add-to-list 'org-capture-templates '(&amp;quot;o&amp;quot; &amp;quot;Outlook item to capture&amp;quot; entry
(file+headline &amp;quot;~/Documents/Notes/inbox.org&amp;quot; &amp;quot;Tasks&amp;quot;)
&amp;quot;* TODO [[outlook:%:link][%^{Item name|Email}]]&amp;quot; :clock-in t :clock-resume t))
&lt;/code>&lt;/pre></description></item></channel></rss>